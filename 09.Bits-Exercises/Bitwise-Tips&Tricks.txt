-------------------------------------------------------------
Get bit at position p from number n;
int p = 5;
int n = 291;               // 00000001 00100011
int nRightP = n >> p;      // 00000000 00001001
int bit = nRightP & 1;     // 00000000 00000001
Console.WriteLine(bit);    // 1
.................... Other way:...............................
int n = 299;               // 00000001 00101011
int fakeBit = 1 << p;      // 00000000 00100000
int foundBit = n & fakeBit;// 00000000 00100000
if(foundBit == 0)
{
	bit = 0;
}
else
{
	bit = 1;
}
Console.WriteLine(bit);    // 1
-------------------------------------------------------------
Set bit at position p to 0;
int p = 5;
int n = 291;               // 00000001 00100011
int mask = ~(1 << p);      // 11111111 11011111
int result = n & mask;     // 00000001 00000011
Console.WriteLine(result); // 259
-------------------------------------------------------------
Set bit at position p to 1;
int p = 4;
int n = 291;                // 00000001 00100011
int mask = 1 << p;          // 00000000 00010000
int result = n | mask;      // 00000001 00110011
Console.WriteLine(result);  // 307
-------------------------------------------------------------
Exchange bits 3,4,5 with bits 24,25,26 (uint32);
uint n = 1140867093
// 01000100 00000000 01000000 00010101
uint mask = 7 // 01111
uint firstBits = (n& (mask << 3 )) >> 3;
//Take 3,4,5 bits and go to the beginning
// 00000000 00000000 00000000 00000101
uint secondBits = (n & (mask << 24)) >> 24;
//Take 24,25,26 bits and go to the beginning
// 00000000 00000000 00000000 00000100
n = n & ~(mask << 3);  //Make 3,4,5 bits 0
n = n & ~(mask << 24); //Make 24,25,26 bits 0
n = n | (firstBits << 24);
//Make | with 24, 25, 26 bits
n = n | (secondBits << 3);
//Make | with 3,4,5 bits
Console.WriteLine(n); // 1107312677
// 01000010 00000000 01000000 00100101

// Compare the input with output:
// 01000100 00000000 01000000 00010101
// 01000010 00000000 01000000 00100101
// 3,4,5 bits is exchanged with 24,25,26 bits!
-------------------------------------------------------------
Exchange bits {p, p+1, Е, p+k-1} with bits {q, q+1, Е, q+k-1}
for (int i = p; i <= p + k - 1; i++)
{
	uint mask = 1; // 0111
	uint bitQ = (n & (mask << q)) >> q;
	uint bitP = (n & (mask << i)) >> i;
	n = n & ~(mask << i); //nullify
	n = n & ~(mask << q); //nullify
	n = n | (bitQ << i); //change bit p
	n = n | (bitP << q); //change bit q            
	q++;
}
-------------------------------------------------------------
How to reverse number in binary system (огледално)
int num = 248;              // 1111 1000
int result = 0; 		
while (num > 0)
{
	int lastBit = num & 1;  
	num = num >> 1;         
	result = result << 1;     
	result = result | lastBit
}
Console.WriteLine(result);   // 0001 1111
//result = 31;
.................... Other way:...............................
int num = 248;
int result = 0;
while (num > 0)
{
	result = result << 1;
	if(()num & 1) == 1)
	{
		result = result | 1;
	}
	num = num >> 1;
}
Console.WriteLine(result);